# HOST_ARCH= 'x86_64'
# HOST_OS= 'posix'
# PLATFORM= 'posix'

# tools set
CROSS = ''
CC = '${_concat(CROSS, gcc)}'
CXX = '${_concat(CROSS, g++)}'
AR = '${_concat(CROSS, ar)}'
AS = '${_concat(CROSS, as)}'
LINK = '$SMARTLINK'

OBJPREFIX= ''
OBJSUFFIX= '.o'
LIBPREFIX= 'lib'
LIBSUFFIX= '.a'
SHLIBPREFIX= '$LIBPREFIX'
SHLIBSUFFIX= '.so'

INCPREFIX= '-I'
INCSUFFIX= ''
LIBDIRPREFIX= '-L'
LIBDIRSUFFIX= ''
LIBLINKPREFIX= '-l'
LIBLINKSUFFIX= ''

CCCOMSTR = "CC $SOURCES"
CXXCOMSTR = "CXX $SOURCES"
SHCCCOMSTR = "CC -fPIC $SOURCES"
SHCXXCOMSTR = "CXX -fPIC $SOURCES"
ARCOMSTR = "AR $TARGET"
SHLINKCOMSTR = "Linking share $TARGET"
LINKCOMSTR = 'Linking $TARGET'

CCVERSION = '11.4.0'
CXXVERSION= '11.4.0'

CCFLAGS = []

CPPDEFPREFIX= '-D'
CPPDEFSUFFIX= ''
CPPPATH= [ ]

_CPPINCFLAGS= '${_concat(INCPREFIX, CPPPATH, INCSUFFIX, __env__, RDirs, TARGET, SOURCE, affect_signature=False)}'
_CPPDEFFLAGS= '${_defines(CPPDEFPREFIX, CPPDEFINES, CPPDEFSUFFIX, __env__, TARGET, SOURCE)}'
_CCCOMCOM= '$CPPFLAGS $_CPPDEFFLAGS $_CPPINCFLAGS'

# gcc compile config
CFLAGS = []
CCCOM= '$CC -o $TARGET -c $CFLAGS $CCFLAGS $_CCCOMCOM $SOURCES'


# g++ compile config
CXXFLAGS= []
CXXCOM= '$CXX -o $TARGET -c $CXXFLAGS $CCFLAGS $_CCCOMCOM $SOURCES'


# as compile config
ASFLAGS= []
ASCOM='$AS $ASFLAGS -o $TARGET $SOURCES'

# ar compile config
ARFLAGS = ['rc']
ARCOM = '$AR $ARFLAGS $TARGET $SOURCES'



# c share obj compile
SHCC= '$CC'
SHCCFLAGS= ['$CCFLAGS', '-fPIC']
SHCFLAGS= ['$CFLAGS']
SHCCCOM= '$SHCC -o $TARGET -c $SHCFLAGS $SHCCFLAGS $_CCCOMCOM $SOURCES'

# c++ share obj compile
SHCXX= '$CXX'
SHCXXFLAGS= ['$CXXFLAGS']
SHCXXCOM= '$SHCXX -o $TARGET -c $SHCXXFLAGS $SHCCFLAGS $_CCCOMCOM $SOURCES'




# link compile config
LIBPREFIXES= ['$LIBPREFIX']
LIBSUFFIXES= ['$LIBSUFFIX', '$SHLIBSUFFIX']

LINKFLAGS= []

_RPATH= '${_concat(RPATHPREFIX, RPATH, RPATHSUFFIX, __env__)}'
__RPATH= '$_RPATH'
_LIBDIRFLAGS= '${_concat(LIBDIRPREFIX, LIBPATH, LIBDIRSUFFIX, __env__, RDirs, TARGET, SOURCE, affect_signature=False)}'
_LIBFLAGS= '${_stripixes(LIBLINKPREFIX, LIBS, LIBLINKSUFFIX, LIBPREFIXES, LIBSUFFIXES, __env__)}'

LINKCOM= '$LINK -o $TARGET $SOURCES $LINKFLAGS $__RPATH  $_LIBDIRFLAGS $_LIBFLAGS'


# shared link compile config
SHLINK= '$LINK'
SHLINKFLAGS= ['$LINKFLAGS', '-shared']
__SHLIBVERSIONFLAGS= '${__libversionflags(__env__,"SHLIBVERSION","_SHLIBVERSIONFLAGS")}'
SHLINKCOM= '$SHLINK -o $TARGET $SHLINKFLAGS $__SHLIBVERSIONFLAGS $__RPATH $SOURCES $_LIBDIRFLAGS $_LIBFLAGS'










CCDEPFLAGS= '-MMD -MF ${TARGET}.d'


























# DRPATHPREFIX= '-L-rpath='
# DRPATHSUFFIX= ''
# ASPPCOM= '$CC $ASPPFLAGS $CPPFLAGS $_CPPDEFFLAGS $_CPPINCFLAGS -c -o $TARGET $SOURCES'
# ASPPFLAGS= '$ASFLAGS'
# BIBER= 'biber'
# BIBERCOM= 'cd ${TARGET.dir} && $BIBER $BIBERFLAGS ${SOURCE.filebase}'
# BIBERFLAGS= []
# BIBTEX= 'bibtex'
# BIBTEXCOM= 'cd ${TARGET.dir} && $BIBTEX $BIBTEXFLAGS ${SOURCE.filebase}'
# BIBTEXFLAGS= []
# CONFIGUREDIR= '#/.sconf_temp'
# CONFIGURELOG= '#/config.log'
# COPYSTR= 'Copy file(s): "$SOURCES" to "$TARGETS"'
# DC= 'dmd'
# DCOM= '$DC $_DINCFLAGS $_DVERFLAGS $_DDEBUGFLAGS $_DFLAGS -c -of$TARGET $SOURCES'
# DDEBUG= []
# DDEBUGPREFIX= '-debug='
# DDEBUGSUFFIX= ''
# DFILESUFFIX= '.d'
# DFLAGPREFIX= '-'
# DFLAGS= []
# DFLAGSUFFIX= ''
# DINCPREFIX= '-I'
# DINCSUFFIX= ''
# DLIB= 'ar cr'
# DLIBCOM= '$DLIB $_DLIBFLAGS $TARGET $SOURCES $_DLIBFLAGS'
# DLIBDIRPREFIX= '-L-L'
# DLIBDIRSUFFIX= ''
# DLIBFLAGPREFIX= '-'
# DLIBFLAGSUFFIX= ''
# DLIBLINKPREFIX= '-L-l'
# DLIBLINKSUFFIX= ''
# DLINK= '$DC'
# DLINKCOM= '$DLINK -of$TARGET $DLINKFLAGS $__DRPATH $SOURCES $_DLIBDIRFLAGS $_DLIBFLAGS'
# DLINKFLAGS= []
# DPATH= ['#/']
# DSUFFIXES= ['.d']
# DVERPREFIX= '-version='
# DVERSIONS= []
# DVERSUFFIX= ''
# DVIPDF= 'dvipdf'
# DVIPDFCOM= 'cd ${TARGET.dir} && $DVIPDF $DVIPDFFLAGS ${SOURCE.file} ${TARGET.file}'
# DVIPDFFLAGS= []
# DVIPS= 'dvips'
# DVIPSFLAGS= []
# ENV= { 'HOME': '/home/nihao','PATH': '/usr/local/bin:/opt/bin:/bin:/usr/bin:/snap/bin'}
# EPSTOPDF= 'epstopdf'
# EPSTOPDFCOM= '$EPSTOPDF $EPSTOPDFFLAGS ${SOURCE} --outfile=${TARGET}'
# EPSTOPDFFLAGS= []
# F03= 'gfortran'
# F03COM= '$F03 -o $TARGET -c $FORTRANCOMMONFLAGS $F03FLAGS $_F03INCFLAGS $_FORTRANMODFLAG $SOURCES'
# F03FLAGS= []
# F03PPCOM= '$F03 -o $TARGET -c $FORTRANCOMMONFLAGS $F03FLAGS $CPPFLAGS $_CPPDEFFLAGS $_F03INCFLAGS $_FORTRANMODFLAG $SOURCES'
# F08= 'gfortran'
# F08COM= '$F08 -o $TARGET -c $FORTRANCOMMONFLAGS $F08FLAGS $_F08INCFLAGS $_FORTRANMODFLAG $SOURCES'
# F08FLAGS= []
# F08PPCOM= '$F08 -o $TARGET -c $FORTRANCOMMONFLAGS $F08FLAGS $CPPFLAGS $_CPPDEFFLAGS $_F08INCFLAGS $_FORTRANMODFLAG $SOURCES'
# F77= 'gfortran'
# F77COM= '$F77 -o $TARGET -c $FORTRANCOMMONFLAGS $F77FLAGS $_F77INCFLAGS $SOURCES'
# F77FLAGS= []
# F77PPCOM= '$F77 -o $TARGET -c $FORTRANCOMMONFLAGS $F77FLAGS $CPPFLAGS $_CPPDEFFLAGS $_F77INCFLAGS $SOURCES'
# F90= 'gfortran'
# F90COM= '$F90 -o $TARGET -c $FORTRANCOMMONFLAGS $F90FLAGS $_F90INCFLAGS $_FORTRANMODFLAG $SOURCES'
# F90FLAGS= []
# F90PPCOM= '$F90 -o $TARGET -c $FORTRANCOMMONFLAGS $F90FLAGS $CPPFLAGS $_CPPDEFFLAGS $_F90INCFLAGS $_FORTRANMODFLAG $SOURCES'
# F95= 'gfortran'
# F95COM= '$F95 -o $TARGET -c $FORTRANCOMMONFLAGS $F95FLAGS $_F95INCFLAGS $_FORTRANMODFLAG $SOURCES'
# F95FLAGS= []
# F95PPCOM= '$F95 -o $TARGET -c $FORTRANCOMMONFLAGS $F95FLAGS $CPPFLAGS $_CPPDEFFLAGS $_F95INCFLAGS $_FORTRANMODFLAG $SOURCES'
# FILE_ENCODING= 'utf-8'
# FORTRAN= 'f77'
# FORTRANCOM= '$FORTRAN -o $TARGET -c $FORTRANCOMMONFLAGS $FORTRANFLAGS $_FORTRANINCFLAGS $_FORTRANMODFLAG $SOURCES'
# FORTRANFLAGS= []
# FORTRANMODDIR= ''
# FORTRANMODDIRPREFIX= '-J'
# FORTRANMODDIRSUFFIX= ''
# FORTRANMODPREFIX= ''
# FORTRANMODSUFFIX= '.mod'
# FORTRANPPCOM= '$FORTRAN -o $TARGET -c $FORTRANCOMMONFLAGS $FORTRANFLAGS $CPPFLAGS $_CPPDEFFLAGS $_FORTRANINCFLAGS $_FORTRANMODFLAG $SOURCES'
# FORTRANSUFFIXES= [ '.f', '.for', '.ftn', '.fpp', '.FPP', '.F', '.FOR', '.FTN', '.f77', '.F77', '.f90', '.F90', '.f95', '.F95', '.f03', '.F03', '.f08', '.F08']
# FRAMEWORKPATH= []
# FRAMEWORKS= []
# GCC_DUMPMACHINE= 'x86_64-linux-gnu'
# GS= 'gs'
# GSCOM= '$GS $GSFLAGS -sOutputFile=$TARGET $SOURCES'
# GSFLAGS= ['-dNOPAUSE', '-dBATCH', '-sDEVICE=pdfwrite']
# IDLSUFFIXES= ['.idl', '.IDL']
# INCF03PREFIX= '-I'
# INCF03SUFFIX= ''
# INCF08PREFIX= '-I'
# INCF08SUFFIX= ''
# INCF77PREFIX= '-I'
# INCF77SUFFIX= ''
# INCF90PREFIX= '-I'
# INCF90SUFFIX= ''
# INCF95PREFIX= '-I'
# INCF95SUFFIX= ''
# INCFORTRANPREFIX= '$INCPREFIX'
# INCFORTRANSUFFIX= '$INCSUFFIX'
# JAR= 'jar'
# JARCOM= "${TEMPFILE('$_JARCOM','$JARCOMSTR')}"
# JARFLAGS= ['cf']
# JARSUFFIX= '.jar'
# LATEX= 'latex'
# LATEXCOM= 'cd ${TARGET.dir} && $LATEX $LATEXFLAGS ${SOURCE.file}'
# LATEXFLAGS= ['-interaction=nonstopmode', '-recorder']
# LATEXRETRIES= 4
# LATEXSUFFIXES= ['.tex', '.ltx', '.latex']
# LDMODULE= '$SHLINK'
# LDMODULECOM= '$LDMODULE -o $TARGET $LDMODULEFLAGS $__LDMODULEVERSIONFLAGS $__RPATH $SOURCES $_LIBDIRFLAGS $_LIBFLAGS '
# LDMODULEFLAGS= '$SHLINKFLAGS'
# LDMODULENAME= '${LDMODULEPREFIX}$_get_ldmodule_stem${_LDMODULESUFFIX}'
# LDMODULENOVERSIONSYMLINKS= '$SHLIBNOVERSIONSYMLINKS'
# LDMODULEPREFIX= '$SHLIBPREFIX'
# LDMODULESUFFIX= '$SHLIBSUFFIX'
# LDMODULEVERSION= '$SHLIBVERSION'
# LDMODULE_NOVERSION_SYMLINK= '$_get_shlib_dir${LDMODULEPREFIX}$_get_ldmodule_stem${LDMODULESUFFIX}'
# LDMODULE_SONAME_SYMLINK= '$_get_shlib_dir$_LDMODULESONAME'
# LINESEPARATOR= '\n'
# M4= 'm4'
# M4COM= 'cd ${SOURCE.rsrcdir} && $M4 $M4FLAGS < ${SOURCE.file} > ${TARGET.abspath}'
# M4FLAGS= ['-E']
# MAKEACRONYMS= 'makeindex'
# MAKEACRONYMSCOM= 'cd ${TARGET.dir} && $MAKEACRONYMS ${SOURCE.filebase}.acn $MAKEACRONYMSFLAGS -o ${SOURCE.filebase}.acr'
# MAKEACRONYMSFLAGS= [ '-s', '${MAKEACRONYMSSTYLE}', '-t', '${SOURCE.filebase}.alg']
# MAKEACRONYMSSTYLE= '${SOURCE.filebase}.ist'
# MAKEGLOSSARY= 'makeindex'
# MAKEGLOSSARYCOM= 'cd ${TARGET.dir} && $MAKEGLOSSARY ${SOURCE.filebase}.glo $MAKEGLOSSARYFLAGS -o ${SOURCE.filebase}.gls'
# MAKEGLOSSARYFLAGS= [ '-s', '${MAKEGLOSSARYSTYLE}', '-t', '${SOURCE.filebase}.glg']
# MAKEGLOSSARYSTYLE= '${SOURCE.filebase}.ist'
# MAKEINDEX= 'makeindex'
# MAKEINDEXCOM= 'cd ${TARGET.dir} && $MAKEINDEX $MAKEINDEXFLAGS ${SOURCE.file}'
# MAKEINDEXFLAGS= []
# MAKENCL= 'makeindex'
# MAKENCLCOM= 'cd ${TARGET.dir} && $MAKENCL ${SOURCE.filebase}.nlo $MAKENCLFLAGS -o ${SOURCE.filebase}.nls'
# MAKENCLFLAGS= '-s ${MAKENCLSTYLE} -t ${SOURCE.filebase}.nlg'
# MAKENCLSTYLE= 'nomencl.ist'
# MAKENEWGLOSSARY= 'makeindex'
# MAKENEWGLOSSARYCOM= 'cd ${TARGET.dir} && $MAKENEWGLOSSARY '
# MAXLINELENGTH= 128072
# NINJA_DEPFILE_PARSE_FORMAT= 'gcc'
# PDFLATEX= 'pdflatex'
# PDFLATEXCOM= 'cd ${TARGET.dir} && $PDFLATEX $PDFLATEXFLAGS ${SOURCE.file}'
# PDFLATEXFLAGS= ['-interaction=nonstopmode', '-recorder']
# PDFPREFIX= ''
# PDFSUFFIX= '.pdf'
# PDFTEX= 'pdftex'
# PDFTEXCOM= 'cd ${TARGET.dir} && $PDFTEX $PDFTEXFLAGS ${SOURCE.file}'
# PDFTEXFLAGS= ['-interaction=nonstopmode', '-recorder']
# PROGPREFIX= ''
# PROGSUFFIX= ''
# PSCOM= 'cd ${TARGET.dir} && $DVIPS $DVIPSFLAGS -o ${TARGET.file} ${SOURCE.file}'
# PSPREFIX= ''
# PSSUFFIX= '.ps'
# RANLIB= 'ranlib'
# RANLIBCOM= '$RANLIB $RANLIBFLAGS $TARGET'
# RANLIBFLAGS= []
# RMIC= 'rmic'
# RMICCOM= '$RMIC $RMICFLAGS -d ${TARGET.attributes.java_lookupdir} -classpath ${SOURCE.attributes.java_classdir} ${SOURCES.attributes.java_classname}'
# RMICFLAGS= []
# RPATHPREFIX= '-Wl,-rpath='
# RPATHSUFFIX= ''
# RPCGEN= 'rpcgen'
# RPCGENCLIENTFLAGS= []
# RPCGENFLAGS= []
# RPCGENHEADERFLAGS= []
# RPCGENSERVICEFLAGS= []
# RPCGENXDRFLAGS= []
# RPM= 'LC_ALL=C rpmbuild'
# RPMFLAGS= ['-ta']
# RPMSUFFIX= '.rpm'
# SHDC= '$DC'
# SHDCOM= '$DC $_DINCFLAGS $_DVERFLAGS $_DDEBUGFLAGS $_DFLAGS -c -fPIC -of$TARGET $SOURCES'
# SHDLINK= '$DC'
# SHDLINKCOM= '$DLINK -of$TARGET $SHDLINKFLAGS $__SHDLIBVERSIONFLAGS $__DRPATH $SOURCES $_DLIBDIRFLAGS $_DLIBFLAGS'
# SHDLINKFLAGS= ['$DLINKFLAGS', '-shared', '-defaultlib=libphobos2.so']
# SHELL= 'sh'
# SHF03= '$F03'
# SHF03COM= '$SHF03 -o $TARGET -c $FORTRANCOMMONFLAGS $SHF03FLAGS $_F03INCFLAGS $_FORTRANMODFLAG $SOURCES'
# SHF03FLAGS= ['$F03FLAGS', '-fPIC']
# SHF03PPCOM= '$SHF03 -o $TARGET -c $FORTRANCOMMONFLAGS $SHF03FLAGS $CPPFLAGS $_CPPDEFFLAGS $_F03INCFLAGS $_FORTRANMODFLAG $SOURCES'
# SHF08= '$F08'
# SHF08COM= '$SHF08 -o $TARGET -c $FORTRANCOMMONFLAGS $SHF08FLAGS $_F08INCFLAGS $_FORTRANMODFLAG $SOURCES'
# SHF08FLAGS= ['$F08FLAGS', '-fPIC']
# SHF08PPCOM= '$SHF08 -o $TARGET -c $FORTRANCOMMONFLAGS $SHF08FLAGS $CPPFLAGS $_CPPDEFFLAGS $_F08INCFLAGS $_FORTRANMODFLAG $SOURCES'
# SHF77= '$F77'
# SHF77COM= '$SHF77 -o $TARGET -c $FORTRANCOMMONFLAGS $SHF77FLAGS $_F77INCFLAGS $SOURCES'
# SHF77FLAGS= ['$F77FLAGS', '-fPIC']
# SHF77PPCOM= '$SHF77 -o $TARGET -c $FORTRANCOMMONFLAGS $SHF77FLAGS $CPPFLAGS $_CPPDEFFLAGS $_F77INCFLAGS $SOURCES'
# SHF90= '$F90'
# SHF90COM= '$SHF90 -o $TARGET -c $FORTRANCOMMONFLAGS $SHF90FLAGS $_F90INCFLAGS $_FORTRANMODFLAG $SOURCES'
# SHF90FLAGS= ['$F90FLAGS', '-fPIC']
# SHF90PPCOM= '$SHF90 -o $TARGET -c $FORTRANCOMMONFLAGS $SHF90FLAGS $CPPFLAGS $_CPPDEFFLAGS $_F90INCFLAGS $_FORTRANMODFLAG $SOURCES'
# SHF95= '$F95'
# SHF95COM= '$SHF95 -o $TARGET -c $FORTRANCOMMONFLAGS $SHF95FLAGS $_F95INCFLAGS $_FORTRANMODFLAG $SOURCES'
# SHF95FLAGS= ['$F95FLAGS', '-fPIC']
# SHF95PPCOM= '$SHF95 -o $TARGET -c $FORTRANCOMMONFLAGS $SHF95FLAGS $CPPFLAGS $_CPPDEFFLAGS $_F95INCFLAGS $_FORTRANMODFLAG $SOURCES'
# SHFORTRAN= '$FORTRAN'
# SHFORTRANCOM= '$SHFORTRAN -o $TARGET -c $FORTRANCOMMONFLAGS $SHFORTRANFLAGS $_FORTRANINCFLAGS $_FORTRANMODFLAG $SOURCES'
# SHFORTRANFLAGS= ['$FORTRANFLAGS']
# SHFORTRANPPCOM= '$SHFORTRAN -o $TARGET -c $FORTRANCOMMONFLAGS $SHFORTRANFLAGS $CPPFLAGS $_CPPDEFFLAGS $_FORTRANINCFLAGS $_FORTRANMODFLAG $SOURCES'
# SHLIBEMITTER= [ <function lib_emitter at 0x7f4987e07910>,<function shlib_symlink_emitter at 0x7f4987b1cee0>]
# SHLIBNAME= '${_get_shlib_dir}${SHLIBPREFIX}$_get_shlib_stem${_SHLIBSUFFIX}'
# SHLIBSONAMEFLAGS= '-Wl,-soname=$_SHLIBSONAME'
# SHLIB_NOVERSION_SYMLINK= '${_get_shlib_dir}${SHLIBPREFIX}$_get_shlib_stem${SHLIBSUFFIX}'
# SHLIB_SONAME_SYMLINK= '${_get_shlib_dir}$_SHLIBSONAME'
# SHOBJPREFIX= '$OBJPREFIX'
# SHOBJSUFFIX= '.os'
# STATIC_AND_SHARED_OBJECTS_ARE_THE_SAME= 0
# SUBSTFILEPREFIX= ''
# SUBSTFILESUFFIX= ''
# SWIG= 'swig'
# SWIGCFILESUFFIX= '_wrap$CFILESUFFIX'
# SWIGCOM= '$SWIG -o $TARGET ${_SWIGOUTDIR} ${_SWIGINCFLAGS} $SWIGFLAGS $SOURCES'
# SWIGCXXFILESUFFIX= '_wrap$CXXFILESUFFIX'
# SWIGDIRECTORSUFFIX= '_wrap.h'
# SWIGFLAGS= []
# SWIGINCPREFIX= '-I'
# SWIGINCSUFFIX= ''
# SWIGPATH= []
# SWIGVERSION= '4.0.2'
# TAR= 'tar'
# TARCOM= '$TAR $TARFLAGS -f $TARGET $SOURCES'
# TARFLAGS= ['-c']
# TARGET_ARCH= None
# TARGET_OS= None
# TARSUFFIX= '.tar'
# TEMPFILE= <class 'SCons.Platform.TempFileMunge'>
# TEMPFILEARGESCFUNC= <function quote_spaces at 0x7f49885677f0>
# TEMPFILEARGJOIN= ' '
# TEMPFILEPREFIX= '@'
# TEX= 'tex'
# TEXCOM= 'cd ${TARGET.dir} && $TEX $TEXFLAGS ${SOURCE.file}'
# TEXFLAGS= ['-interaction=nonstopmode', '-recorder']
# TEXTFILEPREFIX= ''
# TEXTFILESUFFIX= '.txt'
# TOOLS= [ 'default', 'gnulink', 'gcc', 'g++', 'gfortran', 'gas', 'ar', 'dmd', 'm4', 'rpm', 'filesystem', 'lex', 'yacc', 'rpcgen', 'swig', 'jar', 'javac', 'rmic', 'dvipdf', 'dvips', 'gs', 'tex', 'latex', 'pdflatex', 'pdftex', 'tar', 'zip', 'textfile']
# YACC= 'bison'
# YACCCOM= '$YACC $YACCFLAGS $_YACC_HEADER $_YACC_GRAPH -o $TARGET $SOURCES'
# YACCFLAGS= []
# YACCHFILESUFFIX= '.h'
# YACCHXXFILESUFFIX= '.hpp'
# YACCVCGFILESUFFIX= '.vcg'
# YACC_GRAPH_FILE= ''
# YACC_HEADER_FILE= ''
# ZIP= 'zip'
# ZIPCOMPRESSION= 8
# ZIPFLAGS= []
# ZIPROOT= []
# ZIPSUFFIX= '.zip'
# _DDEBUGFLAGS= '${_concat(DDEBUGPREFIX, DDEBUG, DDEBUGSUFFIX, __env__)}'
# _DFLAGS= '${_concat(DFLAGPREFIX, DFLAGS, DFLAGSUFFIX, __env__)}'
# _DINCFLAGS= '${_concat(DINCPREFIX, DPATH, DINCSUFFIX, __env__, RDirs, TARGET, SOURCE)}'
# _DLIBDIRFLAGS= '${_concat(DLIBDIRPREFIX, LIBPATH, DLIBDIRSUFFIX, __env__, RDirs, TARGET, SOURCE)}'
# _DLIBFLAGS= '${_stripixes(DLIBLINKPREFIX, LIBS, DLIBLINKSUFFIX, LIBPREFIXES, LIBSUFFIXES,  __env__)}'
# _DRPATH= '${_concat(DRPATHPREFIX, RPATH, DRPATHSUFFIX, __env__)}'
# _DVERFLAGS= '${_concat(DVERPREFIX, DVERSIONS, DVERSUFFIX, __env__)}'
# _F03INCFLAGS= '${_concat(INCF03PREFIX, F03PATH, INCF03SUFFIX, __env__, RDirs, TARGET, SOURCE, affect_signature=False)}'
# _F08INCFLAGS= '${_concat(INCF08PREFIX, F08PATH, INCF08SUFFIX, __env__, RDirs, TARGET, SOURCE, affect_signature=False)}'
# _F77INCFLAGS= '${_concat(INCF77PREFIX, F77PATH, INCF77SUFFIX, __env__, RDirs, TARGET, SOURCE, affect_signature=False)}'
# _F90INCFLAGS= '${_concat(INCF90PREFIX, F90PATH, INCF90SUFFIX, __env__, RDirs, TARGET, SOURCE, affect_signature=False)}'
# _F95INCFLAGS= '${_concat(INCF95PREFIX, F95PATH, INCF95SUFFIX, __env__, RDirs, TARGET, SOURCE, affect_signature=False)}'
# _FORTRANINCFLAGS= '${_concat(INCFORTRANPREFIX, FORTRANPATH, INCFORTRANSUFFIX, __env__, RDirs, TARGET, SOURCE, affect_signature=False)}'
# _FORTRANMODFLAG= '$( ${_concat(FORTRANMODDIRPREFIX, FORTRANMODDIR, FORTRANMODDIRSUFFIX, __env__, RDirs, TARGET, SOURCE)} $)'
# _JARCOM= '$JAR $_JARFLAGS $TARGET $_JARMANIFEST $_JARSOURCES'
# _LDMODULESUFFIX= '${LDMODULESUFFIX}${_LDMODULEVERSION}'
# _LDMODULEVERSIONFLAGS= '$LDMODULEVERSIONFLAGS -Wl,-soname=$_LDMODULESONAME'
# _LEX_HEADER= '${LEX_HEADER_FILE and "--header-file=" + str(LEX_HEADER_FILE)}'
# _LEX_TABLES= '${LEX_TABLES_FILE and "--tables-file=" + str(LEX_TABLES_FILE)}'
# _SHDLIBVERSIONFLAGS= '$SHDLIBVERSIONFLAGS -L-soname=$_SHLIBSONAME'
# _SHLIBSUFFIX= '${SHLIBSUFFIX}${_SHLIBVERSION}'
# _SHLIBVERSION= "${SHLIBVERSION and '.'+SHLIBVERSION or ''}"
# _SHLIBVERSIONFLAGS= '$SHLIBVERSIONFLAGS -Wl,-soname=$_SHLIBSONAME'
# _SWIGINCFLAGS= '${_concat(SWIGINCPREFIX, SWIGPATH, SWIGINCSUFFIX,__env__, RDirs, TARGET, SOURCE, affect_signature=False)}'
# _SWIGOUTDIR= '${"-outdir \\"%s\\"" % SWIGOUTDIR}'
# _YACC_GRAPH= '${YACC_GRAPH_FILE and "--graph=" + str(YACC_GRAPH_FILE)}'
# _YACC_HEADER= '${YACC_HEADER_FILE and "--header=" + str(YACC_HEADER_FILE)}'
# __DRPATH= '$_DRPATH'
# __DSHLIBVERSIONFLAGS= '${__libversionflags(__env__,"DSHLIBVERSION","_DSHLIBVERSIONFLAGS")}'
# __LDMODULEVERSIONFLAGS= '${__libversionflags(__env__,"LDMODULEVERSION","_LDMODULEVERSIONFLAGS")}'